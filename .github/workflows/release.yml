name: Release

on:
  push:
    branches: [master]
  
jobs:
  artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Get Info 
        run: | 
          echo "::set-output name=version::$(awk '/<version>/,/<\/version>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<version>\(.*\)</version>.*:\1:p')"
          echo "::set-output name=artifact::$(awk '/<artifactId>/,/<\/artifactId>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<artifactId>\(.*\)</artifactId>.*:\1:p')"
        id: info
      - name: Install Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Build Artifact
        run: |
          cd ${{ github.workspace }}
          cwd=$(pwd)
          git submodule update --init --recursive
          mvn -version
          mvn clean install
          mv ./repo/target/${{ steps.info.outputs.artifact }}-repo.jar $cwd
          mv ./share/target/${{ steps.info.outputs.artifact }}-share.jar $cwd
      - name: Generate Changelog
        run: |
          awk '/## [0-9]/{p++} p; /## [0-9]/{if (p > 1) exit}' CHANGELOG.md | awk 'NR>2 {print last} {last=$0}' > RELEASE.md
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.info.outputs.version }}
          tag_name: v${{ steps.info.outputs.version }}
          body_path: ./RELEASE.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Repo Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.info.outputs.artifact }}-repo.jar
          asset_name: ${{ steps.info.outputs.artifact }}-repo.jar
          asset_content_type: application/java-archive
      - name: Upload Share Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.info.outputs.artifact }}-share.jar
          asset_name: ${{ steps.info.outputs.artifact }}-share.jar
          asset_content_type: application/java-archive